name: Release

on:
  release:
    types: [published]

jobs:
  binaries:
    name: Release Binaries
    runs-on: ubuntu-latest
    container:
      image: gohornet/goreleaser-cgo-cross-compiler:1.18.1
      volumes: [/repo]
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Release HORNET
        run: goreleaser --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

  docker:
    name: Release Docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: iotaledger/hornet
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.IOTALEDGER_DOCKER_USERNAME }}
          password: ${{ secrets.IOTALEDGER_DOCKER_PASSWORD }}

      - name: Prepare docker files
        run: |
          cp config_template.json docker/config.json
          cp peering.json docker/

      - name: Create docker.tar.gz
        uses: ihiroky/archive-action@v1
        with:
          root_dir: docker
          file_path: docker.tar.gz

      - name: Upload docker.tar.gz file
        uses: Shopify/upload-to-release@v1.0.1
        with:
          name: HORNET-${{ steps.meta.outputs.version }}-docker.tar.gz
          path: docker.tar.gz
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to Dockerhub
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Prepare private_tangle files
        run: |
          yq -i 'del(.services.create-snapshots.build)' private_tangle/docker-compose.yml
          yq -i 'del(.services.hornet-coo.build)' private_tangle/docker-compose.yml
          yq -i '.services.create-snapshots.image = "iotaledger/hornet:${{ steps.meta.outputs.version }}"' private_tangle/docker-compose.yml
          yq -i '.services.hornet-coo.image = "iotaledger/hornet:${{ steps.meta.outputs.version }}"' private_tangle/docker-compose.yml
          yq -i '.services.hornet-2.image = "iotaledger/hornet:${{ steps.meta.outputs.version }}"' private_tangle/docker-compose.yml
          yq -i '.services.hornet-3.image = "iotaledger/hornet:${{ steps.meta.outputs.version }}"' private_tangle/docker-compose.yml
          yq -i '.services.hornet-4.image = "iotaledger/hornet:${{ steps.meta.outputs.version }}"' private_tangle/docker-compose.yml

      - name: Create private_tangle.tar.gz file
        uses: ihiroky/archive-action@v1
        with:
          root_dir: private_tangle
          file_path: private_tangle.tar.gz

      - name: Upload private_tangle.tar.gz file
        uses: Shopify/upload-to-release@v1.0.1
        with:
          name: HORNET-${{ steps.meta.outputs.version }}-private_tangle.tar.gz
          path: private_tangle.tar.gz
          repo-token: ${{ secrets.GITHUB_TOKEN }}

