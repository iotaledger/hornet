name: Integration Tests

on:
  pull_request:
    paths-ignore:
      - 'documentation/**'
      - 'docker/**'
      - 'nfpm/**'
      - 'private_tangle/**'
      - 'scripts/**'
      - 'tools/**'

jobs:

  common:
    name: common
    env:
      TEST_NAME: common
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build HORNET image
        run: docker build -f Dockerfile -t hornet:dev .

      - name: Pull additional Docker images
        run: |
          docker pull iotaledger/inx-coordinator:1.0.0-beta.4
          docker pull iotaledger/inx-indexer:1.0.0-beta.4

      - name: Run integration tests
        run: docker compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

      - name: Create logs from tester
        if: always()
        run: |
          sudo chmod 777 integration-tests/logs
          docker logs tester &> integration-tests/logs/tester.log

      - name: Save logs as artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_NAME }}
          path: integration-tests/logs

  value:
    name: value
    env:
      TEST_NAME: value
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build HORNET image
        run: docker build -f Dockerfile -t hornet:dev .

      - name: Pull additional Docker images
        run: |
          docker pull iotaledger/inx-coordinator:1.0.0-beta.4
          docker pull iotaledger/inx-indexer:1.0.0-beta.4

      - name: Run integration tests
        run: docker compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

      - name: Create logs from tester
        if: always()
        run: |
          sudo chmod 777 integration-tests/logs
          docker logs tester &> integration-tests/logs/tester.log

      - name: Save logs as artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_NAME }}
          path: integration-tests/logs

  migration:
    name: migration
    env:
      TEST_NAME: migration
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build HORNET image
        run: docker build -f Dockerfile -t hornet:dev .

      - name: Pull additional Docker images
        run: |
          docker pull iotaledger/inx-coordinator:1.0.0-beta.4
          docker pull iotaledger/inx-indexer:1.0.0-beta.4
          docker build github.com/iotaledger/chrysalis-tools#:wfmock -t wfmock:latest

      - name: Run integration tests
        run: docker compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

      - name: Create logs from tester
        if: always()
        run: |
          sudo chmod 777 integration-tests/logs
          docker logs tester &> integration-tests/logs/tester.log

      - name: Save logs as artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_NAME }}
          path: integration-tests/logs

  snapshot:
    name: snapshot
    env:
      TEST_NAME: snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build HORNET image
        run: docker build -f Dockerfile -t hornet:dev .

      - name: Pull additional Docker images
        run: |
          docker pull iotaledger/inx-coordinator:1.0.0-beta.4
          docker pull iotaledger/inx-indexer:1.0.0-beta.4

      - name: Run integration tests
        run: docker compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

      - name: Create logs from tester
        if: always()
        run: |
          sudo chmod 777 integration-tests/logs
          docker logs tester &> integration-tests/logs/tester.log

      - name: Save logs as artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_NAME }}
          path: integration-tests/logs

  autopeering:
    name: autopeering
    env:
      TEST_NAME: autopeering
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build HORNET image
        run: docker build -f Dockerfile -t hornet:dev .

      - name: Pull additional Docker images
        run: |
          docker pull iotaledger/inx-coordinator:1.0.0-beta.4
          docker pull iotaledger/inx-indexer:1.0.0-beta.4

      - name: Run integration tests
        run: docker compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

      - name: Create logs from tester
        if: always()
        run: |
          sudo chmod 777 integration-tests/logs
          docker logs tester &> integration-tests/logs/tester.log

      - name: Save logs as artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TEST_NAME }}
          path: integration-tests/logs
