name: Integration Tests

on:
  pull_request:

jobs:

  common:
    name: common
    env:
      TEST_NAME: common
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build HORNET image
        run: docker build -f docker/Dockerfile.dev -t hornet:dev .

      - name: Pull additional Docker images
        run: |
          docker pull gaiaadm/pumba:0.7.4
          docker pull gaiadocker/iproute2:latest

      - name: Run integration tests
        run: docker-compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

      - name: Create logs from tester
        if: always()
        run: |
          sudo chmod 777 integration-tests/logs
          docker logs tester &> integration-tests/logs/tester.log

      - name: Save logs as artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.TEST_NAME }}
          path: integration-tests/logs

  value:
    name: value
    env:
      TEST_NAME: value
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build HORNET image
        run: docker build -f docker/Dockerfile.dev -t hornet:dev .

      - name: Pull additional Docker images
        run: |
          docker pull gaiaadm/pumba:0.7.4
          docker pull gaiadocker/iproute2:latest

      - name: Run integration tests
        run: docker-compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

      - name: Create logs from tester
        if: always()
        run: |
          sudo chmod 777 integration-tests/logs
          docker logs tester &> integration-tests/logs/tester.log

      - name: Save logs as artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.TEST_NAME }}
          path: integration-tests/logs

  snapshot:
    name: snapshot
    env:
      TEST_NAME: snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build HORNET image
        run: docker build -f docker/Dockerfile.dev -t hornet:dev .

      - name: Pull additional Docker images
        run: |
          docker pull gaiaadm/pumba:0.7.4
          docker pull gaiadocker/iproute2:latest

      - name: Run integration tests
        run: docker-compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

      - name: Create logs from tester
        if: always()
        run: |
          sudo chmod 777 integration-tests/logs
          docker logs tester &> integration-tests/logs/tester.log

      - name: Save logs as artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.TEST_NAME }}
          path: integration-tests/logs

  #  autopeering:
  #    name: autopeering
  #    env:
  #      TEST_NAME: autopeering
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Check out code into the Go module directory
  #        uses: actions/checkout@v2

  #      - name: Build HORNET image
  #        run: docker build -f docker/Dockerfile.dev -t hornet:dev .

  #      - name: Pull additional Docker images
  #        run: |
  #          docker pull gaiaadm/pumba:0.7.4
  #          docker pull gaiadocker/iproute2:latest

  #      - name: Run integration tests
  #        run: docker-compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

  #      - name: Create logs from tester
  #        if: always()
  #        run: |
  #          docker logs tester &> integration-tests/logs/tester.log

  #      - name: Save logs as artifacts
  #        if: always()
  #        uses: actions/upload-artifact@v1
  #        with:
  #          name: ${{ env.TEST_NAME }}
  #          path: integration-tests/logs

#  benchmark:
#    name: benchmark
#    env:
#      TEST_NAME: benchmark
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check out code into the Go module directory
#        uses: actions/checkout@v2

#      - name: Build HORNET image
#        run: docker build -f docker/Dockerfile.dev -t hornet:dev .

#      - name: Pull additional Docker images
#        run: |
#          docker pull gaiaadm/pumba:0.7.4
#          docker pull gaiadocker/iproute2:latest

#      - name: Run integration tests
#        run: docker-compose -f integration-tests/tester/docker-compose.yml up --abort-on-container-exit --exit-code-from tester --build

#      - name: Create logs from tester
#        if: always()
#        run: |
#          sudo chmod 777 integration-tests/logs
#          docker logs tester &> integration-tests/logs/tester.log

#      - name: Save logs as artifacts
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.TEST_NAME }}
#          path: integration-tests/logs