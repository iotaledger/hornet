package gossip_test

import (
	"context"
	"encoding/json"
	"testing"

	"github.com/libp2p/go-libp2p"
	connmgr "github.com/libp2p/go-libp2p-connmgr"
	"github.com/libp2p/go-libp2p-core/crypto"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/gohornet/hornet/pkg/metrics"
	"github.com/gohornet/hornet/pkg/model/storage"
	"github.com/gohornet/hornet/pkg/p2p"
	"github.com/gohornet/hornet/pkg/protocol/gossip"
	"github.com/gohornet/hornet/pkg/testsuite"
	iotago "github.com/iotaledger/iota.go/v2"
)

const (
	MinPoWScore   = 100.0
	BelowMaxDepth = 15
)

func TestMsgProcessorEmit(t *testing.T) {
	ctx, cancel := context.WithCancel(context.Background())
	defer cancel()

	shutdownSignal := make(chan struct{})
	defer close(shutdownSignal)

	te := testsuite.SetupTestEnvironment(t, &iotago.Ed25519Address{}, 0, BelowMaxDepth, MinPoWScore, false)
	defer te.CleanupTestEnvironment(true)

	// we use Ed25519 because otherwise it takes longer as the default is RSA
	sk, _, _ := crypto.GenerateKeyPair(crypto.Ed25519, -1)
	n, err := libp2p.New(
		ctx,
		libp2p.Identity(sk),
		libp2p.ConnectionManager(connmgr.NewConnManager(1, 100, 0)),
	)
	require.NoError(t, err)

	serverMetrics := &metrics.ServerMetrics{}

	manager := p2p.NewManager(n)
	go manager.Start(shutdownSignal)

	service := gossip.NewService(protocolID, n, manager, serverMetrics)
	go service.Start(shutdownSignal)

	networkID := iotago.NetworkIDFromString("testnet4")

	processor, err := gossip.NewMessageProcessor(te.Storage(), te.SyncManager(), gossip.NewRequestQueue(), manager, serverMetrics, &gossip.Options{
		MinPoWScore:       MinPoWScore,
		NetworkID:         networkID,
		BelowMaxDepth:     BelowMaxDepth,
		WorkUnitCacheOpts: testsuite.TestProfileCaches.IncomingMessagesFilter,
	})
	require.NoError(t, err)

	msgData := `{
		  "networkId": "9466822412763346725",
		  "parentMessageIds": [
			"42e53f6bc0ecaf69f0f32dfbd838a0f96396c09b92e53225784ee9d269671939",
			"77cfab5b59a894bd5992b303e93c126191257c025136c610dd351b06863a9ee3",
			"912f97dd2b76ee450bf8495f2c1e47d4255482a5d62aba3bb30e5e2555dea164",
			"a0fe3e8192f0bc4270dd38b3ff08c673cb2253d75891a54bbe534540ae770623"
		  ],
		  "payload": {
			"type": 2,
			"index": "362527d26c54bfc00049f46049593e7d5ff4bc0856e4a235347614b72503889b",
			"data": ""
		  },
		  "nonce": "13835058055282328477"
		}
		`

	msg := &iotago.Message{}
	assert.NoError(t, json.Unmarshal([]byte(msgData), msg))

	message, err := storage.NewMessage(msg, iotago.DeSeriModePerformValidation)
	assert.NoError(t, err)

	// should fail because parents not solid
	err = processor.Emit(message)
	assert.Error(t, err)

	// set valid parents
	msg.Parents = iotago.MessageIDs{[32]byte{}}

	// pow again, so we have a valid message
	err = te.PoWHandler.DoPoW(msg, nil, 1)
	assert.NoError(t, err)

	// need to create a new message, so the iotago message is serialized again
	message, err = storage.NewMessage(msg, iotago.DeSeriModePerformValidation)
	assert.NoError(t, err)

	// should not fail
	err = processor.Emit(message)
	assert.NoError(t, err)

	// set wrong network ID
	msg.NetworkID = 1

	// pow again, so we have a valid message
	err = te.PoWHandler.DoPoW(msg, nil, 1)
	assert.NoError(t, err)

	// need to create a new message, so the iotago message is serialized again
	message, err = storage.NewMessage(msg, iotago.DeSeriModePerformValidation)
	assert.NoError(t, err)

	// message should fail because of wrong network ID
	err = processor.Emit(message)
	assert.Error(t, err)

	// set valid network ID again
	msg.NetworkID = networkID

	// pow again, so we have a valid message
	err = te.PoWHandler.DoPoW(msg, nil, 1)
	assert.NoError(t, err)

	// need to create a new message, so the iotago message is serialized again
	message, err = storage.NewMessage(msg, iotago.DeSeriModePerformValidation)
	assert.NoError(t, err)

	// should not fail
	err = processor.Emit(message)
	assert.NoError(t, err)

	// set wrong nonce
	msg.Nonce = 123

	// need to create a new message, so the iotago message is serialized again
	message, err = storage.NewMessage(msg, iotago.DeSeriModePerformValidation)
	assert.NoError(t, err)

	// should fail because of wrong score
	err = processor.Emit(message)
	assert.Error(t, err)
}
