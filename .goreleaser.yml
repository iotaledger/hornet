# Documentation at http://goreleaser.com

# Project name
project_name: HORNET

# Environment variables
env:
  - GO111MODULE=on

# Builds
builds:
  # Linux AMD64
  - id: hornet-linux-amd64
    binary: hornet
    flags:
      - -tags=builtin_static,rocksdb
    ldflags:
      - -s -w -X github.com/gohornet/hornet/core/cli.AppVersion={{.Version}}
    main: main.go
    goos:
      - linux
    goarch:
      - amd64
  # Linux ARM64
  - id: hornet-linux-arm64
    binary: hornet
    flags:
      - -tags=builtin_static,rocksdb
    env:
      - CGO_ENABLED=1
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    ldflags:
      - -s -w -X github.com/gohornet/hornet/core/cli.AppVersion={{.Version}}
    main: main.go
    goos:
      - linux
    goarch:
      - arm64
  ## Windows AMD64
  #- id: hornet-windows-amd64
  #  binary: hornet
  #  flags:
  #    - -tags=builtin_static,rocksdb
  #  env:
  #    - CGO_ENABLED=1
  #    - CC=/usr/bin/x86_64-w64-mingw32-gcc-posix
  #    - CXX=/usr/bin/x86_64-w64-mingw32-g++-posix
  #  ldflags:
  #    - -s -w -X github.com/gohornet/hornet/core/cli.AppVersion={{.Version}}
  #  main: main.go
  #  goos:
  #    - windows
  #  goarch:
  #    - amd64

# Archives
archives:
  - format: tar.gz
    wrap_in_directory: true
    format_overrides:
      - goos: windows
        format: zip
    name_template: "{{.ProjectName}}-{{.Version}}_{{.Os}}_{{.Arch}}"
    replacements:
      amd64: x86_64
      arm64: ARM64
      darwin: macOS
      linux: Linux
      windows: Windows
    files:
      - README.md
      - LICENSE
      - config.json
      - config_devnet.json
      - peering.json
      - profiles.json
      - private_tangle/config_private_tangle.json
      - private_tangle/create_snapshot_private_tangle.sh
      - private_tangle/migration_bootstrap.sh
      - private_tangle/private_tangle_keys.md
      - private_tangle/run_2nd.sh
      - private_tangle/run_3rd.sh
      - private_tangle/run_4th.sh
      - private_tangle/run_coo_bootstrap.sh
      - private_tangle/run_coo.sh

# DEB and RPM packages
nfpms:
  - id: nfpm
    package_name: hornet
    file_name_template: '{{ tolower .ProjectName }}_{{ replace .Version "v" "" }}_{{ .Arch }}'
    vendor: GoReleaser
    license: Apache 2.0
    maintainer: GoHORNET
    homepage: https://github.com/gohornet/hornet
    description: HORNET is a powerful IOTA fullnode software.
    formats:
      - deb
      - rpm
    bindir: /usr/bin
    contents:
      - src: "nfpm/shared_files/hornet.service"
        dst: "/lib/systemd/system/hornet.service"

      - src: "config.json"
        dst: "/var/lib/hornet/config.json"
        type: config

      - src: "config_devnet.json"
        dst: "/var/lib/hornet/config_devnet.json"
        type: config

      - src: "peering.json"
        dst: "/var/lib/hornet/peering.json"
        type: config

      - src: "profiles.json"
        dst: "/var/lib/hornet/profiles.json"
        type: config

      - src: "nfpm/shared_files/hornet.env"
        dst: "/etc/default/hornet"
        type: config

      - src: "private_tangle/config_private_tangle.json"
        dst: "/var/lib/hornet/private_tangle/config_private_tangle.json"
        type: config

      - src: "private_tangle/create_snapshot_private_tangle.sh"
        dst: "/var/lib/hornet/private_tangle/create_snapshot_private_tangle.sh"

      - src: "private_tangle/migration_bootstrap.sh"
        dst: "/var/lib/hornet/private_tangle/migration_bootstrap.sh"

      - src: "private_tangle/private_tangle_keys.md"
        dst: "/var/lib/hornet/private_tangle/private_tangle_keys.md"

      - src: "private_tangle/run_2nd.sh"
        dst: "/var/lib/hornet/private_tangle/run_2nd.sh"

      - src: "private_tangle/run_3rd.sh"
        dst: "/var/lib/hornet/private_tangle/run_3rd.sh"

      - src: "private_tangle/run_4th.sh"
        dst: "/var/lib/hornet/private_tangle/run_4th.sh"

      - src: "private_tangle/run_coo_bootstrap.sh"
        dst: "/var/lib/hornet/private_tangle/run_coo_bootstrap.sh"

      - src: "private_tangle/run_coo.sh"
        dst: "/var/lib/hornet/private_tangle/run_coo.sh"

    dependencies:
      - systemd
      - wget
      - bash
    scripts:
      preremove: "nfpm/deb_files/prerm"
      postremove: "nfpm/deb_files/postrm"
      preinstall: "nfpm/deb_files/preinst"
      postinstall: "nfpm/deb_files/postinst"
    overrides:
      rpm:
        replacements:
          amd64: x86_64
        file_name_template: "{{ tolower .ProjectName }}-{{ .Version }}-{{ .Arch }}"
        scripts:
          preinstall: "nfpm/rpm_files/preinst"
          postinstall: "nfpm/rpm_files/postinst"
          preremove: "nfpm/rpm_files/prerm"
          postremove: "nfpm/rpm_files/postrm"

# Checksum
checksum:
  name_template: "checksums.txt"

# Snapshot
snapshot:
  name_template: "{{ .Tag }}"

# Changelog
changelog:
  skip: true

announce:
  twitter:
    enabled: true
    message_template: "{{.ProjectName}}-{{.Version}} is out! Find all details at {{ .ReleaseURL }}! #IOTA #HORNET"

# Release
release:
  prerelease: auto
  name_template: "{{.ProjectName}}-{{.Version}}"
  github:
    owner: gohornet
    name: hornet
