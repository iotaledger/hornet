# golang 1.15.5-buster amd64
FROM golang@sha256:36662a765cf14816e9f7df955956203fc652714233c68e8c7e28411b94c6ddeb AS build

# Ensure ca-certficates are up to date
RUN update-ca-certificates

# Set the current Working Directory inside the container
RUN mkdir /app
WORKDIR /app

# Use Go Modules
COPY go.mod .
COPY go.sum .

ENV GO111MODULE=on
RUN go mod download
RUN go mod verify
RUN apt-get update && apt-get install gcc-multilib g++-multilib -y

# Copy everything from the current directory to the PWD(Present Working Directory) inside the container
COPY . .

# Build the binary
RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build \
      -ldflags='-w -s -extldflags "-static"' -a \
       -o /go/bin/hornet

############################
# Image
############################
# using static nonroot image
# user:group is nonroot:nonroot, uid:gid = 65532:65532
FROM gcr.io/distroless/static@sha256:23aa732bba4c8618c0d97c26a72a32997363d591807b0d4c31b0bbc8a774bddf

EXPOSE 8081/tcp
EXPOSE 14265/tcp
EXPOSE 15600/tcp
EXPOSE 14626/udp

# Copy assets into distroless image
COPY --from=build /go/bin/hornet /app/hornet
COPY ./config.json /app/config.json
COPY ./config_comnet.json /app/config_comnet.json
COPY ./config_devnet.json /app/config_devnet.json
COPY ./peering.json /app/peering.json
COPY ./profiles.json /app/profiles.json
COPY ./mqtt_config.json /app/mqtt_config.json

ENTRYPOINT ["/app/hornet"]
